import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int colunas;

        System.out.println("Digite o número de colunas para as formas:");
        colunas = scanner.nextInt();

        while (true) {
            System.out.println("\nEscolha a forma que deseja exibir:");
            System.out.println("1. Retângulo");
            System.out.println("2. Diagonal superior esquerda");
            System.out.println("3. Diagonal superior direita");
            System.out.println("4. Diagonal inferior esquerda");
            System.out.println("5. Diagonal inferior direita");
            System.out.println("0. Sair");

            int escolha = scanner.nextInt();

            switch (escolha) {
                case 1:
                    exibirRetangulo(colunas);
                    break;
                case 2:
                    exibirDiagonalSuperiorEsquerda(colunas);
                    break;
                case 3:
                    exibirDiagonalSuperiorDireita(colunas);
                    break;
                case 4:
                    exibirDiagonalInferiorEsquerda(colunas);
                    break;
                case 5:
                    exibirDiagonalInferiorDireita(colunas);
                    break;
                case 0:
                    System.out.println("Saindo...");
                    System.exit(0);
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        }
    }

    public static void exibirRetangulo(int colunas) {
        for (int i = 0; i < colunas; i++) {
            for (int j = 0; j < colunas; j++) {
                System.out.print("* ");
            }
            System.out.println();
        }
    }

    public static void exibirDiagonalSuperiorEsquerda(int colunas) {
        for (int i = 0; i < colunas; i++) {
            for (int j = 0; j < colunas; j++) {
                if (j <= i)
                    System.out.print("* ");
                else
                    System.out.print("  ");
            }
            System.out.println();
        }
    }

    public static void exibirDiagonalSuperiorDireita(int colunas) {
        for (int i = 0; i < colunas; i++) {
            for (int j = 0; j < colunas; j++) {
                if (j >= i)
                    System.out.print("* ");
                else
                    System.out.print("  ");
            }
            System.out.println();
        }
    }

    public static void exibirDiagonalInferiorEsquerda(int colunas) {
        for (int i = 0; i < colunas; i++) {
            for (int j = 0; j < colunas; j++) {
                if (j >= colunas - i - 1)
                    System.out.print("* ");
                else
                    System.out.print("  ");
            }
            System.out.println();
        }
    }

    public static void exibirDiagonalInferiorDireita(int colunas) {
        for (int i = 0; i < colunas; i++) {
            for (int j = 0; j < colunas; j++) {
                if (j <= colunas - i - 1)
                    System.out.print("* ");
                else
                    System.out.print("  ");
            }
            System.out.println();
        }
    }
}
